dnl	This file is an input file used by the GNU "autoconf" program to
dnl	generate the file "configure", which is run during Tcl installation
dnl	to configure the system for the local environment.
AC_INIT(ns.c)
AC_PROG_INSTALL

#Set current working directory
PWD=`pwd`

AC_ARG_WITH(gcc, , CC=gcc)
AC_ARG_WITH(acc, , CC=acc)
AC_ARG_WITH(lcc, , CC=lcc)
AC_ARG_WITH(cc, , CC=cc)
if test -z "$CC" ; then 
    CC=gcc
fi

compiler=`basename $CC`
if test "$compiler" = "gcc" ; then
  CC="$CC -fwritable-strings"
fi
AC_SUBST(CC)


solaris=0
AC_PROGRAM_CHECK(uname_found, uname, 1, 0)
[ if test $uname_found -eq 1 ; then
    system=`uname -s`-`uname -r`
    case $system in
      SunOS-5*)
        solaris=1
        ;;
    esac
fi ]

. configure.users

AC_SUBST(COPTS)
AC_SUBST(DP_BINDIR)
AC_SUBST(NS_BINDIR)
AC_SUBST(NS_LIBDIR)
AC_SUBST(NS_ADMDIR)
AC_SUBST(NSPORT)
AC_SUBST(LAUNCHPORT)
AC_SUBST(HOSTS)
AC_SUBST(DP_LIBRARY)
AC_SUBST(MANDIR)

#--------------------------------------------------------------------
#	Supply substitutes for missing POSIX header files.
#--------------------------------------------------------------------

AC_HEADER_CHECK(errno.h, , AC_DEFINE(NO_ERRNO_H))

#--------------------------------------------------------------------
#	Supply a substitute for stdlib.h if it doesn't define strtol,
#	strtoul, or strtod (which it doesn't in some versions of SunOS).
#--------------------------------------------------------------------

echo $ac_n checking for proper stdlib.h...
AC_HEADER_EGREP(strtoul, stdlib.h, tcl_stdlib=1, tcl_stdlib=0)
if test $tcl_stdlib = 0; then
    AC_DEFINE(NO_STDLIB_H)
    found=no
else
    found=yes
fi
echo " $found"

AC_HEADER_CHECK(sys/time.h, ,AC_DEFINE(NO_SYS_TIME_H))

#--------------------------------------------------------------------
#	Check for various typedefs and provide substitutes if
#	they don't exist.
#--------------------------------------------------------------------

AC_SIZE_T

#--------------------------------------------------------------------
#	Locate the X11 header files and the X11 library archive.  Try
#	the ac_find_x macro first, but if it doesn't find the X stuff
#	(e.g. because there's no xmkmf program) then check through
#	a list of possible directories.
#--------------------------------------------------------------------

AC_PROGRAM_CHECK(x_ok, xmkmf, 1, 0)
if test $x_ok = 1; then
    AC_FIND_X
fi
if test "$XINCLUDE_DIR" != ""; then
    x_includes="$XINCLUDE_DIR"
fi

if test "$x_includes" = /usr/include; then
    XINCLUDES="# no special path needed"
elif test "$x_includes" != ""; then
    XINCLUDES=" -I$x_includes"
else
    echo checking for X11 header files
    XINCLUDES="# no special path needed"
    AC_TEST_CPP([#include <X11/Intrinsic.h>], [], [XINCLUDES="nope"])
    if test "$XINCLUDES" = nope; then
        dirs="/usr/unsupported/include /usr/local/include  /usr/sww/include /usr/X386/include /usr/include/X11R4 /usr/X11R5/include /usr/X11R6/include /usr/include/X11R5 /usr/include/X11R6 /usr/openwin/include /usr/X11/include"
        for i in $dirs ; do
	    if test -r $i/X11/Intrinsic.h; then
	        XINCLUDES=" -I$i"
	    fi
        done
    fi
fi
if test "$XINCLUDES" = nope; then
  echo "Warning:  couldn't find any X11 include files."
  echo "Add the path to INCLUDE_PATH in configure.users"
  XINCLUDES="# no include files found"
fi
AC_SUBST(XINCLUDES)


#---------------------------------------------------------------------
# X11 Libraries
#---------------------------------------------------------------------
XLIBDIR=""
X11LIB="-lX11"

if test "$XLIBRARY_DIR" != ""; then
    x_libraries="$XLIBRARY_DIR"
fi

if test "$x_libraries" != ""; then
    if test $solaris = 1; then
	XLIBDIR="-L$x_libraries -R$x_libraries"
    else
	XLIBDIR="-L$x_libraries"
    fi
else
    echo "checking for X11 library archive"
    AC_CHECK_LIB(X11, main, X11LIB="-lX11", X11LIB=nope)
    if test "$X11LIB" = nope; then
	dirs="/usr/unsupported/lib /usr/local/lib /usr/X386/lib /usr/lib/X11R4 /usr/X11R5/lib /usr/lib/X11R5 /usr/lib/X11R6 /usr/openwin/lib /usr/X11/lib"
	for i in $dirs ; do
	    if test -r $i/libX11.a; then
		if test $solaris = 1; then
		    XLIBDIR="-L$i -R$i"
		else
		    XLIBDIR="-L$i"
		fi
		X11LIB="-lX11"
	    fi
	done
    fi
fi
if test "$X11LIB" = nope ; then
    AC_CHECK_LIB(Xwindow, main, X11LIB=-lXwindow)
fi
if test "$X11LIB" = nope ; then
    echo "Warning:  couldn't find the X11 library archive.  Using -lX11."
    echo "Add the path to LIB_PATH in configure.users"
    X11LIB="-lX11"
fi

AC_SUBST(XLIBDIR)
AC_SUBST(X11LIB)

#--------------------------------------------------------------------
#	Check for the existence of various libraries.  The order here
#	is important, so that then end up in the right order in the
#	command line generated by Make.
#--------------------------------------------------------------------

AC_CHECK_LIB(Xbsd, main, [LIBS="$LIBS -lXbsd"])
AC_CHECK_LIB(socket, main, [LIBS="$LIBS -lsocket"])
AC_CHECK_LIB(nsl, main, [LIBS="$LIBS -lnsl"])
AC_CHECK_LIB(dnet_stub, main, [LIBS="$LIBS -ldnet_stub"])
AC_CHECK_LIB(dl, main, [LIBS="$LIBS -ldl"])
AC_CHECK_LIB(w, main, [LIBS="$LIBS -lw"])

#--------------------------------------------------------------------
#	Locate the Tcl header files and archives.  
#	Check through a list of possible directories, including the
#	INCLUDE_PATH
#--------------------------------------------------------------------

echo "Looking for tcl include files..."
AC_TEST_CPP([#include <tcl.h>], [TCL_INCLUDES="# no special path needed"],
			[TCL_INCLUDES="nope"])

if test "$TCL_INCLUDES" = nope; then
    dirs="/usr/unsupported/include /usr/local/include  /usr/sww/include /usr/include/tcl ../tcl $INCLUDE_PATH"
    for i in $dirs ; do
	if test -r $i/tcl.h; then
	    TCL_INCLUDES="-I$i"
	fi
    done
fi

if test "$TCL_INCLUDES" = nope; then
  echo "Warning:  couldn't find any tcl include files. Using files in compat"
  echo "Add the path to INCLUDE_PATH in configure.users"
  TCL_INCLUDES="-Icompat"
fi
AC_SUBST(TCL_INCLUDES)

#---------------------------------------------------------------------
# TCL Libraries
#---------------------------------------------------------------------

echo "checking for tcl library archive"
AC_CHECK_LIB(tcl, main, TCL_LIB="-ltcl", TCL_LIB=nope)
if test "$TCL_LIB" = nope; then
    dirs="/usr/unsupported/lib /usr/local/lib /usr/X11R5/lib /usr/lib/X11R5 /usr/lib/X11R6 /usr/openwin/lib /usr/X11/lib $LIB_PATH"
    for i in $dirs ; do
	if test -r $i/libtcl.a; then
	    if test $solaris = 1; then
		TCL_LIBDIR="-L$i -R$i"
	    else
		TCL_LIBDIR="-L$i"
	    fi
	    TCL_LIB="-ltcl"
	fi
    done
fi

if test "$TCL_LIB" = nope ; then
    echo "Warning:  couldn't find the Tcl library archive.  Using -ltcl."
    echo "Add the path to LIB_PATH in configure.users"
    TCL_LIB="-ltcl"
fi

AC_SUBST(TCL_LIBDIR)
AC_SUBST(TCL_LIB)

#--------------------------------------------------------------------
#	Locate the Tk header files and archives.  
#	Check through a list of possible directories, including the
#	INCLUDE_PATH
#--------------------------------------------------------------------

echo "Looking for tk include files..."
AC_TEST_CPP([#include <tk.h>], [TK_INCLUDES="# no special path needed"],
			[TK_INCLUDES="nope"])

if test "$TK_INCLUDES" = nope; then
    dirs="/usr/unsupported/include /usr/local/include  /usr/sww/include /usr/include/tk ../tk $INCLUDE_PATH"
    for i in $dirs ; do
	if test -r $i/tk.h; then
	    TK_INCLUDES="-I$i"
	fi
    done
fi

if test "$TK_INCLUDES" = nope; then
  echo "Warning:  couldn't find any tk include files."
  echo "Add the path to INCLUDE_PATH in configure.users"
  TK_INCLUDES="-Icompat"
fi
AC_SUBST(TK_INCLUDES)

#---------------------------------------------------------------------
# TCL Libraries
#---------------------------------------------------------------------

echo "checking for tk library archive"
AC_CHECK_LIB(tk, main, TK_LIB="-ltk", TK_LIB=nope)
if test "$TK_LIB" = nope; then
    dirs="/usr/unsupported/lib /usr/local/lib /usr/X11R5/lib /usr/lib/X11R5 /usr/lib/X11R6 /usr/openwin/lib /usr/X11/lib $LIB_PATH"
    for i in $dirs ; do
	if test -r $i/libtk.a; then
	    if test $solaris = 1; then
		TK_LIBDIR="-L$i -R$i"
	    else
		TK_LIBDIR="-L$i"
	    fi
	    TK_LIB="-ltk"
	fi
    done
fi

if test "$TK_LIB" = nope ; then
    echo "Warning:  couldn't find the Tk library archive.  Using -ltk."
    echo "Add the path to LIB_PATH in configure.users"
    TK_LIB="-ltk"
fi

AC_SUBST(TK_LIBDIR)
AC_SUBST(TK_LIB)

#--------------------------------------------------------------------
#	Locate the tclsh program
#--------------------------------------------------------------------

echo "Looking for tclsh"
TCLSH="nope"
path=`echo $PATH | sed 's/:/ /g'`
dirs="/usr/unsupported/bin /usr/local/bin /usr/cluster/bin /usr/new/bin /usr/sww/bin /usr/bin $path"
for i in $dirs ; do
    if test -x $i/tclsh; then
    TCLSH="$i/tclsh"
    fi
done

if test "$TCLSH" = nope; then
  echo "Warning:  couldn't find tclsh."
  echo "Add the path to your PATH and rerun configure"
  TCLSH=tclsh
fi
AC_SUBST(TCLSH)

AC_OUTPUT(Makefile)
